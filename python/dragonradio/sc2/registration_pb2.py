# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: registration.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12registration.proto\x12\x07sc2.reg\"\x8a\x01\n\x0cTalkToServer\x12%\n\x08register\x18\x01 \x01(\x0b\x32\x11.sc2.reg.RegisterH\x00\x12\'\n\tkeepalive\x18\x02 \x01(\x0b\x32\x12.sc2.reg.KeepaliveH\x00\x12\x1f\n\x05leave\x18\x03 \x01(\x0b\x32\x0e.sc2.reg.LeaveH\x00\x42\t\n\x07payload\"!\n\x08Register\x12\x15\n\rmy_ip_address\x18\x01 \x01(\r\"\x1d\n\tKeepalive\x12\x10\n\x08my_nonce\x18\x01 \x01(\x05\"\x19\n\x05Leave\x12\x10\n\x08my_nonce\x18\x01 \x01(\x05\"]\n\nTellClient\x12!\n\x06inform\x18\x01 \x01(\x0b\x32\x0f.sc2.reg.InformH\x00\x12!\n\x06notify\x18\x02 \x01(\x0b\x32\x0f.sc2.reg.NotifyH\x00\x42\t\n\x07payload\"L\n\x06Inform\x12\x14\n\x0c\x63lient_nonce\x18\x01 \x01(\x05\x12\x19\n\x11keepalive_seconds\x18\x02 \x01(\x02\x12\x11\n\tneighbors\x18\x03 \x03(\r\"\x1b\n\x06Notify\x12\x11\n\tneighbors\x18\x01 \x03(\rb\x06proto3')



_TALKTOSERVER = DESCRIPTOR.message_types_by_name['TalkToServer']
_REGISTER = DESCRIPTOR.message_types_by_name['Register']
_KEEPALIVE = DESCRIPTOR.message_types_by_name['Keepalive']
_LEAVE = DESCRIPTOR.message_types_by_name['Leave']
_TELLCLIENT = DESCRIPTOR.message_types_by_name['TellClient']
_INFORM = DESCRIPTOR.message_types_by_name['Inform']
_NOTIFY = DESCRIPTOR.message_types_by_name['Notify']
TalkToServer = _reflection.GeneratedProtocolMessageType('TalkToServer', (_message.Message,), {
  'DESCRIPTOR' : _TALKTOSERVER,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.TalkToServer)
  })
_sym_db.RegisterMessage(TalkToServer)

Register = _reflection.GeneratedProtocolMessageType('Register', (_message.Message,), {
  'DESCRIPTOR' : _REGISTER,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.Register)
  })
_sym_db.RegisterMessage(Register)

Keepalive = _reflection.GeneratedProtocolMessageType('Keepalive', (_message.Message,), {
  'DESCRIPTOR' : _KEEPALIVE,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.Keepalive)
  })
_sym_db.RegisterMessage(Keepalive)

Leave = _reflection.GeneratedProtocolMessageType('Leave', (_message.Message,), {
  'DESCRIPTOR' : _LEAVE,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.Leave)
  })
_sym_db.RegisterMessage(Leave)

TellClient = _reflection.GeneratedProtocolMessageType('TellClient', (_message.Message,), {
  'DESCRIPTOR' : _TELLCLIENT,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.TellClient)
  })
_sym_db.RegisterMessage(TellClient)

Inform = _reflection.GeneratedProtocolMessageType('Inform', (_message.Message,), {
  'DESCRIPTOR' : _INFORM,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.Inform)
  })
_sym_db.RegisterMessage(Inform)

Notify = _reflection.GeneratedProtocolMessageType('Notify', (_message.Message,), {
  'DESCRIPTOR' : _NOTIFY,
  '__module__' : 'registration_pb2'
  # @@protoc_insertion_point(class_scope:sc2.reg.Notify)
  })
_sym_db.RegisterMessage(Notify)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TALKTOSERVER._serialized_start=32
  _TALKTOSERVER._serialized_end=170
  _REGISTER._serialized_start=172
  _REGISTER._serialized_end=205
  _KEEPALIVE._serialized_start=207
  _KEEPALIVE._serialized_end=236
  _LEAVE._serialized_start=238
  _LEAVE._serialized_end=263
  _TELLCLIENT._serialized_start=265
  _TELLCLIENT._serialized_end=358
  _INFORM._serialized_start=360
  _INFORM._serialized_end=436
  _NOTIFY._serialized_start=438
  _NOTIFY._serialized_end=465
# @@protoc_insertion_point(module_scope)
